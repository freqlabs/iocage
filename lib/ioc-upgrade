#!/bin/sh

__update () {
    local _dataset _jail_type _fulluuid _mountpoint _jail_release _date \
          _non_interactive _release_root

    _dataset=${1}

    _jail_type=$(__get_dataset_ioc_prop type ${_dataset})

    if [ "${_jail_type}" == "basejail" ] ; then
        # Re-clone required filesystems
        __reclone_basejail ${_dataset}
    else
        _fulluuid=$(__get_dataset_ioc_prop host_hostuuid ${_dataset})
        _mountpoint=$(__get_dataset_zfs_prop mountpoint ${_dataset})
        _jail_release=$(__get_dataset_ioc_prop release ${_dataset})
        _date=$(date "+%F_%T")

        __info "Creating back-out snapshot"
        __snapshot ${_dataset} ioc-update_${_date}

        __info "Updating jail"

        if [ $(uname -U) -lt 102000 ] ; then
            _non_interactive=""
        else
            _non_interactive="--not-running-from-cron"
        fi

        _release_root=${iocroot}/releases/${_jail_release}/root

        if [ -e ${_release_root}/etc/freebsd-update.conf ] ; then

            env UNAME_r="${_jail_release}" env PAGER="/bin/cat" \
                /usr/sbin/freebsd-update \
                    ${_non_interactive} \
                    -b ${_mountpoint}/root \
                    -f ${_release_root}/freebsd-update.conf \
                    -d ${_mountpoint}/root/var/db/freebsd-update/ \
                    fetch

            env UNAME_r="${_jail_release}" env PAGER="/bin/cat" \
                /usr/sbin/freebsd-update \
                    -b ${_mountpoint}/root \
                    -f ${_release_root}/freebsd-update.conf \
                    -d ${_mountpoint}/root/var/db/freebsd-update/ \
                    install

        fi

        __stderr
        __info "Once finished, don't forget to remove the snapshot!"
    fi
}

__upgrade () {
    local _dataset _jail_type _fulluuid _mountpoint _date _oldrelease

    if [ ! -d ${iocroot}/download/${release} ] ; then
        __error           "Release not found: ${release}"
        __stderr "         Please run iocage fetch first."
        exit 1
    fi

    _dataset=${1}

    _mountpoint=$(__get_dataset_zfs_prop mountpoint ${_dataset})
    _oldrelease=$(__get_dataset_ioc_prop release ${_dataset})
    _jail_type=$(__get_dataset_ioc_prop type ${_dataset})

    if [ "${_jail_type}" == "basejail" ] ; then
        __set_dataset_ioc_prop release="${release}" ${_dataset}
        # Re-clone required filesystems
        __reclone_basejail ${_dataset}
        cp -Rp ${_mountpoint}/root/etc ${_mountpoint}/root/etc.old
        etcupdate -D ${_mountpoint}/root -F \
                  -s ${iocroot}/base/${release}/root/usr/src
        __chroot ${_dataset} newaliases
        if [ ${?} -eq 0 ] ; then
            __stderr
            __stderr "  Upgrade successful. Please restart jail and inspect."
            __stderr "  Remove ${_mountpoint}/root/etc.old if everything is OK."
            exit 0
        else
            __stderr
            __error "Etcupdate failed! Backing out."
            __set__dataset_ioc_prop release="${_oldrelease}" ${_dataset}
            rm -rf ${_mountpoint}/root/etc
            mv ${_mountpoint}/root/etc.old ${_mountpoint}/root/etc
            exit 1
        fi
    fi

    _fulluuid=$(__get_dataset_ioc_prop host_hostuuid ${_dataset})
    _date=$(date "+%F_%T")

    __info "Creating back-out snapshot"
    __snapshot ${_dataset} ioc-upgrade_${_date}

    __info "Upgrading jail"

    env UNAME_r=${_oldrelease} env PAGER="/bin/cat" \
        /usr/sbin/freebsd-update \
        -b ${_mountpoint}/root \
        -d ${_mountpoint}/root/var/db/freebsd-update/ \
        -r ${release} upgrade

    [ ${?} -eq 0 ] ||
        __fatal_error "Upgrade failed, aborting install."

    while [ ${?} -eq 0 ] ; do
        env UNAME_r=${_oldrelease} env PAGER="/bin/cat" \
            /usr/sbin/freebsd-update \
            -b ${_mountpoint}/root \
            -d ${_mountpoint}/root/var/db/freebsd-update/ \
            -r ${release} install
    done

    # Set jail's zfs property to new release
    __set_dataset_ioc_prop release="${release}" ${_dataset}

    __stderr
    __info "Once finished don't forget to remove the snapshot!"
}
