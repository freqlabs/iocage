#!/bin/sh

__rctl_limits () {
    local __dataset _fulluuid _rlimits _failed _prop _value _limit _action
    
    _dataset=${1}

    _fulluuid=$(__get_dataset_ioc_prop host_hostuuid ${_dataset})

    _rlimits=$(__get_dataset_ioc_prop rlimits ${_dataset})
    if [ "${_rlimits}" == "on" ] ; then
        echo -n "  + Applying resource limits"
        _failed=0
        for _prop in ${CONF_RCTL} ; do
            _value=$(__get_dataset_ioc_prop ${_prop} ${_dataset})
            _limit=${_value%%:*}
            _action=${_value#*:}

            if [ -z "${_limit}" ] || [ -z "${_action}" ] ; then
                echo
                echo -n "  ERROR: incorrect resource limit: ${_limit} "
                echo "action: ${_action} for property: ${_prop}"
                echo "  HINT : check man page for syntax."
                continue
            fi
            
            if [ ${_limit} != "off" ] ; then
                rctl -a jail:ioc-${_fulluuid}:${_prop}:${_action}=${_limit}
                if [ ${?} -ne 0 ] ; then
                    echo "    FAILED to apply ${_prop}=${_action}:${_limit}"
                    _failed=1
                fi
            fi
        done
        if [ ${_failed} -eq 0 ] ; then
            echo " OK"
        fi
    fi
}

__rctl_list () {
    local _dataset _fulluuid _jid _limits _i _limit _cpuset
    
    _dataset=${1}

    _fulluuid=$(__get_dataset_ioc_prop host_hostuuid ${_dataset})
    _jid=$(jls -j ioc-${_fulluuid} jid)
    _limits=$(rctl -h | grep ${_fulluuid})

    echo "* Active limits for jail: ${_fulluuid}"

    for _i in ${_limits} ; do
        _limit=${_i#*:*:}
        echo "  - ${_limit}"
    done

    if [ -n "${_jid}" ] ; then
        _cpuset=$(cpuset -g -j ${_jid} | cut -f2 -d:)
        echo "* CPU set: ${_cpuset}"
    fi
}

__rctl_list_all () {
    echo "* All active limits:"
    rctl | grep jail
}

__rctl_uncap () {
    local _dataset _fulluuid
    
    _dataset=${1}

    _fulluuid=$(__get_dataset_ioc_prop host_hostuuid ${_dataset})

    echo "  Releasing resource limits.."
    rctl -r jail:ioc-${_fulluuid}
    echo "  Listing active rules for jail:"
    rctl | grep ${_fulluuid}
}

__rctl_inuse () {
    local _dataset _fulluuid

    _dataset=${1}

    _fulluuid=$(__get_dataset_ioc_prop host_hostuuid ${_dataset})

    echo "Consumed resources:"
    echo "-------------------"
    rctl -hu jail:ioc-${_fulluuid}
}

__rctl_inuse_all () {
    local _jails _print_head _jail
    local _fulluuid _tag _resources
    local _res _header _value _line

    _jails=$(__find_jail ALL)
    _print_head=1

    for _jail in ${_jails} ; do
        _line=""
        _fulluuid=$(__get_dataset_ioc_prop host_hostuuid ${_jail})
        _tag=$(__get_dataset_ioc_prop tag ${_jail})
        _resources=$(rctl -hu jail:ioc-${_fulluuid})

        for _res in ${_resources} ; do
            _header=${_res%%=*}
            _value=${_res#*=}
            _line="${_line},${_value}"
        done

        if [ ${_print_head} -eq 1 ] ; then
            echo -n "UUID,TAG,cputime,datasize,stacksize,coredumpsize,memoryuse,"
            echo -n "memorylocked,maxproc,openfiles,vmemoryuse,pseudoterminals,"
            echo -n "swapuse,nthr,msgqqueued,msgqsize,nmsgq,nsem,nsemop,nshm,"
            echo    "shmsize,wallclock,pcpu"
            _print_head=0
        fi

        if __is_running ${_fulluuid} ; then
            echo "${_fulluuid},${_tag}${_line}"
        fi
    done
}
