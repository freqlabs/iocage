#!/bin/sh

__record () {
    local _action _dataset _fulluuid _mountpoint _union_mount

    _action=${1}
    _dataset=${2}
    
    _fulluuid=$(__get_dataset_ioc_prop host_hostuuid ${_dataset})
    _mountpoint=$(__get_dataset_zfs_prop mountpoint ${_dataset})

    [ -d "${_mountpoint}/recorded" ] ||
        mkdir "${_mountpoint}/recorded"

    if [ ${_action} == "start" ] ; then
        _union_mount=$(mount -t unionfs | grep -c ${_fulluuid})

        echo "* Recording to: ${_mountpoint}/recorded"

        if [ ${_union_mount} -lt 1 ] ; then
            mount -t unionfs -o noatime,copymode=transparent \
                  "${_mountpoint}/recorded/" "${_mountpoint}/root"
        fi

    elif [ ${_action} == "stop" ] ; then
        umount -ft unionfs "${_mountpoint}/root" > /dev/null 2>&1
        echo "* Stopped recording to: ${_mountpoint}/recorded"

        find "${_mountpoint}/recorded/" -type d -empty -exec rm -rf {} \; \
             > /dev/null 2>&1
        find "${_mountpoint}/recorded/" -type f -size 0 -exec rm -f {} \; \
             > /dev/null 2>&1
        find "${_mountpoint}/recorded/" -name "utx.*" -exec rm -f {} \; \
             > /dev/null 2>&1
        find "${_mountpoint}/recorded/" -name .history -exec rm -f {} \; \
             > /dev/null 2>&1
    fi
}

__package () {
    # create package from recorded changes
    # sha256 too
    local _dataset _fulluuid _mountpoint

    _dataset=${1}
    
    _fulluuid=$(__get_dataset_ioc_prop host_hostuuid ${_dataset})
    _mountpoint=$(__get_dataset_zfs_prop mountpoint ${_dataset})

    if [ ! -d "${_mountpoint}/recorded" ] ; then
        echo "  ERROR: Nothing to package, missing recorded directory!"
        echo "  HINT: Have you recorded the jail?"
        exit 1
    fi

    [ -d "${iocroot}/packages" ] ||
        mkdir "${iocroot}/packages"

    echo "* Creating package..."
    tar -cvJf "${iocroot}/packages/${_fulluuid}.tar.xz" \
        -C "${_mountpoint}/recorded" . &&
        sha256 -q "${iocroot}/packages/${_fulluuid}.tar.xz" \
               > "${iocroot}/packages/${_fulluuid}.sha256"
    echo "* Package saved to: ${iocroot}/packages/${_fulluuid}.tar.xz"
    echo "* Checksum created: ${iocroot}/packages/${_fulluuid}.sha256"
}

__import () {
    local _name _package _image _pcount _icount _pcksum _icksum _new_cksum
    local _old_cksum _uuid _mountpoint

    _name=${1}
    _package=$(find ${iocroot}/packages/ -name "${_name}*.tar.xz")
    _image=$(find ${iocroot}/images/ -name "${_name}*.tar.xz")
    _pcount=$(echo ${_package} | wc -w)
    _icount=$(echo ${_image} | wc -w)
    _pcksum=$(find ${iocroot}/packages/ -name "${_name}*.sha256")
    _icksum=$(find ${iocroot}/images/ -name "${_name}*.sha256")
    _new_cksum=$(sha256 -q "${_package}")
    _old_cksum=$(cat "${_pcksum}")
    _uuid=$(__create_jail | awk '/uuid/ { FS="="; print $2 }')
    _mountpoint=$(__get_jail_prop mountpoint ${_uuid})

    [ ${_pcount} -gt 1 ] &&
        __fatal_error "Multiple matching packages, please narrow down UUID."

    [ ${_icount} -gt 1 ] &&
        __fatal_error "Multiple matching images, please narrow down UUID."

    [ ${_pcount} -gt 0 ] && [ "${_icount}" -gt 0 ] &&
        __fatal_error "Same UUID is matching both a package and an image."

    if [ ${_pcount} -gt 0 ] ; then
        echo "* Found package ${_package}"
        echo "* Importing package ${_package}"

        [ -f "${_pcksum}" ] ||
            __fatal_error "Missing checksum file!"

        [ "${_new_cksum}" == "${_old_cksum}" ] ||
            __fatal_error "Checksum mismatch."
        
        tar -xvJf "${_package}" -C "${_mountpoint}/root"

    elif [ ${_icount} -gt 0 ] ; then
        echo "* Found image ${_image}"
        echo "* Importing image ${_image}"

        [ -f "${_icksum}" ] ||
            __fatal_error "Missing checksum file!"

        _new_cksum=$(sha256 -q "${_image}")
        _old_cksum=$(cat "${_icksum}")
        _uuid=$(__create_jail -e | tail -1)
        _mountpoint=$(__get_jail_prop mountpoint ${_uuid})

        [ "${_new_cksum}" == "${_old_cksum}" ] ||
            __fatal_error "Checksum mismatch."

        tar -xvJf "${_image}" -C "${_mountpoint}/root"

    else
        __fatal_error "Package or image ${_name} not found!"
    fi

    cat ${iocroot}/jails/${_uuid}/root/etc/rc.conf \
    | sed -E "s/[a-zA-Z0-9]{8,}-.*-.*-.*-[a-zA-Z0-9]{12,}/${_uuid}/g" \
    > ${iocroot}/jails/${_uuid}/rc.conf

    mv ${iocroot}/jails/${_uuid}/rc.conf \
       ${iocroot}/jails/${_uuid}/root/etc/rc.conf
}

__export () {
    # Export full jail
    # sha256
    local _dataset _fulluuid _mountpoint

    _dataset=${1}
    
    _fulluuid=$(__get_dataset_ioc_prop host_hostuuid ${_dataset})
    ! __is_running ${_fulluuid} ||
        __fatal_error "${_fulluuid} is running! Stop jail before exporting."

    [ -d ${iocroot}/images ] ||
        mkdir ${iocroot}/images

    echo "* Exporting ${_fulluuid}"

    _mountpoint=$(__get_dataset_zfs_prop mountpoint ${_dataset})
    
    tar -cvJf "${iocroot}/images/${_fulluuid}.tar.xz" \
        -C "${_mountpoint}/root" . &&
        sha256 -q ${iocroot}/images/${_fulluuid}.tar.xz \
        > ${iocroot}/images/${_fulluuid}.sha256

    echo "* Image saved to: ${iocroot}/images/${_fulluuid}.tar.xz"
    echo "* Checksum created: ${iocroot}/images/${_fulluuid}.sha256"
}
