#!/bin/sh

__snapshot () {
    local _dataset _snapshot _date

    _dataset=${1}
    _snapshot=${2}

    if [ -z "${_snapshot}" ] ; then
        _date=$(date "+%F_%T")
        _snapshot="ioc-${_date}"
    fi

    zfs snapshot -r ${_dataset}@${_snapshot}
}

__snapremove () {
    local _dataset _snapshot _snapshots _snap

    _dataset=${1}
    _snapshot=${2}

    if [ ${_snapshot} == "ALL" ] ; then
        _snapshots=$(zfs list -d1 -Hrt snapshot -o name ${_dataset})
        for _snap in ${_snapshots} ; do
            zfs destroy -r ${_snap}
        done
    else
        echo "* removing snapshot: ${_snapshot}"
        zfs destroy -r ${_dataset}@${_snapshot}
    fi
}

__snaplist () {
    local _dataset _snapshots _snap _snapshot _creation _used _referenced

    _dataset=${1}

    _snapshots=$(zfs list -Hrt snapshot -d1 -o name ${_dataset})

    printf "%-36s  %-21s  %s   %s\n" "NAME" "CREATED" "RSIZE" "USED"

    for _snap in ${_snapshots} ; do
        _snapshot=${_snap#*@}
        _creation=$(__get_dataset_zfs_prop creation ${_snap})
        _used=$(__get_dataset_zfs_prop used ${_snap})
        _referenced=$(__get_dataset_zfs_prop referenced ${_snap})

        printf "%-36s  %-21s  %s    %s\n" \
               "${_snapshot}" "${_creation}" "${_referenced}" "${_used}"
    done
}

__rollback () {
    local _dataset _snapshot _fs_list _fs

    _dataset=${1}
    _snapshot=${2}
    
    _fs_list=$(zfs list -rHo name ${_dataset})
    for _fs in ${_fs_list} ; do
        echo "* Rolling back to ${_fs}@${_snapshot}"
        zfs rollback -r ${_fs}@${_snapshot}
    done
}

__promote () {
    local _dataset _fs_list _fs _origin
    
    _dataset=${1}
    
    _fs_list=$(zfs list -rHo name ${_dataset})

    for _fs in ${_fs_list} ; do
        _origin=$(__get_dataset_zfs_prop origin ${_fs})

        if [ "${_origin}" != "-" ] ; then
            echo "* promoting filesystem: ${_fs}"
            zfs promote ${_fs}
        else
            echo "  INFO: filesystem ${_fs} is not a clone"
        fi
    done
}
