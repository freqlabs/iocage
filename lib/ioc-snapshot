#!/bin/sh

__snapshot () {
    local _name _snapshot _dataset _date
    
    _name=${1%%@*}
    __check_name "${_name}"
    
    _snapshot=${1#*@}

    _dataset=$(__find_jail ${_name})
    __check_dataset "${_dataset}" ${_name}

    if [ -z "${_snapshot}" ] ; then
        _date=$(date "+%F_%T")
        zfs snapshot -r ${_dataset}@ioc-${_date}
    else
        zfs snapshot -r ${_dataset}@${_snapshot}
    fi
}

__snapremove () {
    local _name _snapshot _dataset _snapshots _snap

    _name=${1%%@*}
    __check_name "${_name}"
    
    _snapshot=${1#*@}
    __require_not_empty "${_snapshot}" "Missing snapshot name!"
    __require_single_word "${_snapshot}" "Invalid snapshot name: ${_snapshot}"

    _dataset=$(__find_jail ${_name})
    __check_dataset "${_dataset}" ${_name}

    if [ ${_snapshot} == "ALL" ] ; then
        _snapshots=$(zfs list -d1 -Hrt snapshot -o name ${_dataset})
        for _snap in ${_snapshots} ; do
            zfs destroy -r ${_snap}
        done 
    else
        echo "* removing snapshot: ${_snapshot}"
        zfs destroy -r ${_dataset}@${_snapshot}
    fi
}

__snaplist () {
    local _name _dataset _fulluuid _snapshots
    local _snap _snapshot _creation _used _referenced

    _name=${1}
    
    _dataset=$(__find_jail ${_name})
    __check_dataset "${_dataset}" ${_name}

    _fulluuid=$(__get_dataset_ioc_prop host_hostuuid ${_dataset})
    _snapshots=$(zfs list -Hrt snapshot -d1 -o name ${_dataset})

    printf "%-36s  %-21s  %s   %s\n" "NAME" "CREATED" "RSIZE" "USED"

    for _snap in ${_snapshots} ; do
        _snapshot=${_snap#*@}
        _creation=$(__get_dataset_zfs_prop creation ${_snap})
        _used=$(__get_dataset_zfs_prop used ${_snap})
        _referenced=$(__get_dataset_zfs_prop referenced ${_snap})

        printf "%-36s  %-21s  %s    %s\n" \
               "${_snapshot}" "${_creation}" "${_referenced}" "${_used}"
    done
}

__rollback () {
    local _name _snapshot _dataset _fs_list _fs
    
    _name=${1%%@*}
    __check_name "${_name}"
    
    _snapshot=${1#*@}
    __require_single_word "${_snapshot}" "Invalid snapshot name: ${_snapshot}"
    
    _dataset=$(__find_jail ${_name})
    __check_dataset "${_dataset}" ${_name}

    if [ -n "${_snapshot}" ] ; then
        _fs_list=$(zfs list -rHo name ${_dataset})
        for _fs in ${_fs_list} ; do
            echo "* Rolling back to ${_fs}@${_snapshot}"
            zfs rollback -r ${_fs}@${_snapshot}
        done
    fi
}

__promote () {
    local _name _dataset _fs_list _fs _origin
    
    _name=${1}

    _dataset=$(__find_jail ${_name})
    __check_dataset "${_dataset}" ${_name}
    
    _fs_list=$(zfs list -rHo name ${_dataset})

    for _fs in ${_fs_list} ; do
        _origin=$(__get_dataset_zfs_prop origin ${_fs})

        if [ "${_origin}" != "-" ] ; then
            echo "* promoting filesystem: ${_fs}"
            zfs promote ${_fs}
        else
            echo "  INFO: filesystem ${_fs} is not a clone"
        fi
    done
}
